name: Publish packages when version is bumped
on:
  push:
    branches:
      - main
      - main_publish-new-packages-github-action

jobs:
  list-packages:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.PACKAGES }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - id: set-matrix
        run: echo "PACKAGES=$(ls packages/**/package.json | jq -R -s -c 'split("\n")[:-1]')" >> "$GITHUB_OUTPUT"
  publish-packages:
    needs: list-packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ fromJson(needs.list-packages.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.12.0'
      - name: Get package name
        id: package-name
        run: echo "PACKAGE_NAME=$(cat ${{ matrix.package }} | jq -r '.name')" >> "$GITHUB_OUTPUT"
      - name: Check if version has been updated
        id: check
        uses: EndBug/version-check@v2
        with:
          file-url: https://unpkg.com/${{ steps.package-name.outputs.PACKAGE_NAME }}/package.json
          file-name: ${{ matrix.package }}
          static-checking: localIsNew
      - name: Log when changed
        if: steps.check.outputs.changed == 'true'
        run: 'echo "Version change found! New version: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'
      - uses: 'moonrepo/setup-toolchain@v0'
        if: steps.check.outputs.changed == 'true'
      - name: Remove unneeded cargo binaries
        run: sed -i '/cargo-llvm-cov/d' .moon/toolchain.yml
      - name: Moon Build Package
        if: steps.check.outputs.changed == 'true'
        run: moon ${{ steps.package-name.outputs.PACKAGE_NAME }}:build
      - name: Publishing package
        if: steps.check.outputs.changed == 'true'
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: yarn workspace ${{ steps.package-name.outputs.PACKAGE_NAME }} npm publish --access public
  release:
    needs: list-packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: ${{ fromJson(needs.list-packages.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.12.0'
      - name: Get package name
        id: package-name
        run: echo "PACKAGE_NAME=$(cat ${{ matrix.package }} | jq -r '.name')" >> "$GITHUB_OUTPUT"
      - name: Update all changeset files to only include this package
        run: ./.github/scripts/rewrite-changeset-files.sh ${{ steps.package-name.outputs.PACKAGE_NAME }}
      - uses: 'moonrepo/setup-toolchain@v0'
      - name: Install dependencies
        run: yarn install
      - name: Run changeset version for this package
        run: yarn changeset version
      - name: Check if version has been updated
        id: check
        uses: EndBug/version-check@v2
        with:
          file-url: https://unpkg.com/${{ steps.package-name.outputs.PACKAGE_NAME }}/package.json
          file-name: ${{ matrix.package }}
          static-checking: localIsNew
      - name: Create Pull Request
        if: steps.check.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: Version Change for Package ${{ steps.package-name.outputs.PACKAGE_NAME }}
          branch: release-${{ steps.check.outputs.version }}-${{ steps.package-name.outputs.PACKAGE_NAME }}
